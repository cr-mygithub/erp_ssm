<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.erp.mapper.EmpMapper">
<!--     EasyUiResultUtil<EmpVo> page-->
<resultMap id="empVoResult" type="com.erp.vo.EmpVo">
    <id property="id" column="id"/>
    <result property="userName" column="username"/>
    <result property="tel" column="tel"/>
    <result property="idCardNo" column="id_card_no"/>
    <result property="realName" column="real_name"/>
    <result property="gender" column="gender"/>
    <result property="email" column="email"/>
    <result property="address" column="address"/>
    <result property="birthDate" column="birthdate"/>
    <result property="deptName" column="dept_name"/>
    <result property="roleName" column="roleNames"/>

</resultMap>
    <sql id="havingWheres">
        <if test="wheres.realName!=null and wheres.realName!=''">
        and e.real_name like '%${wheres.realName}%'
        </if>
        <if test="wheres.userName!=null and wheres.userName!=''">
         and e.username like '%${wheres.userName}%'
        </if>
        <if test="wheres.deptName!=null and wheres.deptName!=''">
            and dept_name like '%{wheres.deptName}%'
        </if>
        <if test="wheres.roleName!=null and wheres.roleName!=''">
            and roleNames like '%${wheres.roleName}%'
        </if>

    </sql>
    <sql id="selectResult">
         select e.*,d.`name` dept_name,GROUP_CONCAT(r.`name` SEPARATOR ',') `roleNames` from emp e
    LEFT JOIN dept d ON e.dept_id=d.id
    LEFT JOIN emp_role er on er.emp_id=e.id
    LEFT JOIN role r on r.id=er.role_id
    GROUP BY e.id
    </sql>
    <select id="page" resultMap="empVoResult" >
     <include refid="selectResult"/>
	HAVING 1=1
	<include refid="havingWheres"/>
    order by e.id desc
    limit #{pageNum},#{pageSize}


    </select>
<!--     int count(@Param("wheres") EmpVo wheres)-->
    <select id="count" resultType="int">
        select count(*) from(
        <include refid="selectResult"/>
        HAVING 1=1
        <include refid="havingWheres"/>
        ) number;
    </select>
<!--      void add(@Param("emp") Emp emp);-->
    <insert id="add" parameterType="com.erp.pojo.Emp">
        insert into `emp`(`id`, `username`, `password`, `tel`, `id_card_no`, `real_name`, `gender`, `email`, `address`, `birthdate`, `dept_id`) VALUES
        (null,#{emp.userName},#{emp.password},#{emp.tel},#{emp.idCardNo},#{emp.realName},#{emp.gender},#{emp.email},#{emp.address},#{emp.birthDate},#{emp.deptId})
    </insert>
<!--    EmpVo findById(@Param("id") int id);-->
    <select id="findById" resultMap="empVoResult">
        <include refid="selectResult"/>
        having e.id=#{id}
    </select>
<!--     void update(@Param("emp") Emp emp);-->
    <update id="update">
        update `emp` set
         `tel`=#{emp.tel},
        `id_card_no`=#{emp.idCardNo}, `real_name`=#{emp.realName}, `gender`=#{emp.gender}, `email`=#{emp.email}, `address`=#{emp.address},
         `birthdate`=#{emp.birthDate}, `dept_id`=#{emp.deptId} where id=#{emp.id}
    </update>
<!--     void remove(int[] ids);-->
    <delete id="remove">
        delete from `emp` where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
<!--      int getKey();-->
    <select id="getKey" resultType="int">
        select LAST_INSERT_ID()
    </select>
<!--      Emp login(String userName, String password);-->
    <select id="login" resultType="com.erp.pojo.Emp">
        select * from emp where username=#{userName} and password=#{password}
    </select>
</mapper>